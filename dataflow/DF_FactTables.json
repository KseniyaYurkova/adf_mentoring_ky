{
	"name": "DF_FactTables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_SourceOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "OnlinePurchase"
				},
				{
					"dataset": {
						"referenceName": "DS_Source_tOnlineSevice",
						"type": "DatasetReference"
					},
					"name": "OnlineService"
				},
				{
					"dataset": {
						"referenceName": "DS_Sink_DimMovie",
						"type": "DatasetReference"
					},
					"name": "DimMovie"
				},
				{
					"dataset": {
						"referenceName": "DS_DimOnlineService",
						"type": "DatasetReference"
					},
					"name": "DimOnlineService"
				},
				{
					"dataset": {
						"referenceName": "DS_Source_tMovie",
						"type": "DatasetReference"
					},
					"name": "Movie"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DS_Sink_FactOnlinePurchase",
						"type": "DatasetReference"
					},
					"name": "sink1"
				},
				{
					"dataset": {
						"referenceName": "DS_FactOnlinePurchase_MonthlySnapshot",
						"type": "DatasetReference"
					},
					"name": "sink2"
				}
			],
			"transformations": [
				{
					"name": "PurchaseToMovie"
				},
				{
					"name": "PurcahseToOnlineService"
				},
				{
					"name": "OnlineToDimOnline"
				},
				{
					"name": "OutPutSink"
				},
				{
					"name": "MovieToDimMovie"
				},
				{
					"name": "TransformDate"
				},
				{
					"name": "OnlineServiceToOnlinePurchaseForMonthlySnapshot"
				},
				{
					"name": "OnlineToDimOnlineForMonthly"
				},
				{
					"name": "select1"
				},
				{
					"name": "derivedColumn1"
				},
				{
					"name": "aggregate"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Id as integer,",
				"          ServiceId as integer,",
				"          MovieId as integer,",
				"          UserId as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string,",
				"          TransactionDate as timestamp,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OnlinePurchase",
				"source(output(",
				"          ServiceId as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> OnlineService",
				"source(output(",
				"          MovieKey as integer,",
				"          MovieIdNK as integer,",
				"          Title as string,",
				"          ReleaseDate as date,",
				"          Runtime as integer,",
				"          MovieStatus as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimMovie",
				"source(output(",
				"          ServiceKey as integer,",
				"          ServiceCode as string,",
				"          ServiceName as string,",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> DimOnlineService",
				"source(output(",
				"          MovieId as integer,",
				"          MovieIdNK as integer,",
				"          Budget as integer,",
				"          HomepagePath as string,",
				"          Title as string,",
				"          OriginalTitle as string,",
				"          ReleaseDate as date,",
				"          Revenue as long,",
				"          Runtime as integer,",
				"          MovieStatusId as integer,",
				"          AvgVote as decimal(3,1),",
				"          CreatedDate as timestamp,",
				"          ModifiedDate as timestamp,",
				"          SrcFileName as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> Movie",
				"OnlinePurchase, Movie join(OnlinePurchase@MovieId == Movie@MovieId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> PurchaseToMovie",
				"PurchaseToMovie, OnlineService join(OnlinePurchase@ServiceId == OnlineService@ServiceId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> PurcahseToOnlineService",
				"PurcahseToOnlineService, DimOnlineService join(OnlineService@ServiceCode == DimOnlineService@ServiceCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> OnlineToDimOnline",
				"MovieToDimMovie select(mapColumn(",
				"          Price,",
				"          TransactionId,",
				"          DateKey = TransactionDate,",
				"          ModifiedDate = OnlinePurchase@ModifiedDate,",
				"          OnlineServiceKey = ServiceKey,",
				"          MovieKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> OutPutSink",
				"OnlineToDimOnline, DimMovie join(Movie@MovieIdNK == DimMovie@MovieIdNK,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> MovieToDimMovie",
				"OutPutSink derive(DateKey = toInteger(toString(DateKey, 'yyyyMMdd'))) ~> TransformDate",
				"OnlineService, OnlinePurchase join(OnlineService@ServiceId == OnlinePurchase@ServiceId,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> OnlineServiceToOnlinePurchaseForMonthlySnapshot",
				"OnlineServiceToOnlinePurchaseForMonthlySnapshot, DimOnlineService join(OnlineService@ServiceCode == DimOnlineService@ServiceCode,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> OnlineToDimOnlineForMonthly",
				"OnlineToDimOnlineForMonthly select(mapColumn(",
				"          Price,",
				"          TransactionId,",
				"          MonthKey = TransactionDate,",
				"          OnlineServiceKey = ServiceKey",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 derive(MonthKey = toInteger(toString(MonthKey, 'yyyyMM'))) ~> derivedColumn1",
				"derivedColumn1 aggregate(groupBy(MonthKey,",
				"          OnlineServiceKey),",
				"     Price = sum(Price),",
				"          TransactionId = count(TransactionId)) ~> aggregate",
				"TransformDate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          DateKey as integer,",
				"          OnlineServiceKey as integer,",
				"          MovieKey as integer,",
				"          Price as decimal(4,1),",
				"          TransactionId as string",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['truncate table dbo.FactOnlinePurchase'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          DateKey,",
				"          OnlineServiceKey,",
				"          MovieKey,",
				"          Price,",
				"          TransactionId",
				"     )) ~> sink1",
				"aggregate sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          MonthKey as integer,",
				"          OnlineServiceKey as integer,",
				"          PurchaseAmount as decimal(10,1),",
				"          PurchaseQuantity as integer",
				"     ),",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     format: 'table',",
				"     preSQLs:['truncate table dbo.FactOnlinePurchase_MonthlySnapshot'],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError',",
				"     mapColumn(",
				"          MonthKey,",
				"          OnlineServiceKey,",
				"          PurchaseAmount = Price,",
				"          PurchaseQuantity = TransactionId",
				"     )) ~> sink2"
			]
		}
	}
}